name: Build

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Source code checkout
        uses: actions/checkout@v4
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Check
        run: cargo check
        working-directory: backend
      - name: Test
        run: cargo test --all-targets
        working-directory: backend
      - name: Format
        run: cargo fmt --all -- --check
        working-directory: backend
      - name: Clippy
        run: cargo clippy --all -- -D warnings
        working-directory: backend
      - uses: shuttle-hq/deploy-action@main
        with:
          working-directory: backend
          deploy-key: ${{ secrets.SHUTTLE_API_KEY }}
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '20.9.0'
      - name: Install Angular CLI
        run: npm install -g @angular/cli
        working-directory: frontend
      - name: Install dependencies
        run: npm install
        working-directory: frontend
#      - name: Test
#        run: npm test -- --watch=false --browsers=ChromeHeadless
#        working-directory: frontend
      - name: Build
        run: ng build --configuration production
        working-directory: frontend
#      - name: Deploy to Netlify
#        uses: nwtgck/actions-netlify@v3.0
#        with:
#          publish-dir: './frontend/dist/dance_on_location/browser'
#          production-branch: main
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#          deploy-message: "Deploy from GitHub Actions"
#          enable-pull-request-comment: true
#          enable-commit-comment: true
#          overwrites-pull-request-comment: true
#        env:
#          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
#          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
#        timeout-minutes: 1